<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>jmeter-controller-remote-demo</artifactId>
    <groupId>org.automation</groupId>
    <version>1.0-SNAPSHOT</version>
    <!--<packaging>pom</packaging> -->

    <description>
        Executes a JMeter test.
        Invoke with "mvn clean verify"
    </description>

    <properties>
		<BUILD_TAG>${project.version}</BUILD_TAG>
        <webapp.protocol>https</webapp.protocol>
        <webapp.url>petstore.octoperf.com</webapp.url>
        <!-- <webapp.port>80</webapp.port>  -->
        <!-- <webapp.uris>${project.basedir}/src/test/uris/uris.txt</webapp.uris> -->
        <!--<jmeter.analysis.maven.plugin.version>1.0.6</jmeter.analysis.maven.plugin.version> -->
        <jmeter-maven-plugin.version>3.8.0</jmeter-maven-plugin.version>
        <test.duration>30</test.duration>
        <test.threads>10</test.threads>
    </properties>

         <build>
             <plugins>
                 <!-- execute JMeter test -->
                <plugin>
                     <groupId>com.lazerycode.jmeter</groupId>
                     <artifactId>jmeter-maven-plugin</artifactId>
                     <version>${jmeter-maven-plugin.version}</version>
                     <executions>
					 <!-- Generate JMeter configuration -->
						<execution>
							<id>configuration</id>
							<goals>
								<goal>configure</goal>
							</goals>
						</execution> 
						<!-- Run JMeter tests -->
                         <execution>
                             <id>jmeter-tests</id>
                             <goals>
                                 <goal>jmeter</goal>
                             </goals>
                         </execution>
						<!-- Fail build on errors in test -->
						<execution>
                             <id>jmeter-check-results</id>
                             <goals>
                                 <goal>results</goal>
                             </goals>
                         </execution>							
                     </executions>
					
					<configuration>
						<propertiesGlobal>
                             <!--A user which accesses all URLs-->
                            <threadgroup00.name>JMeterDemo</threadgroup00.name>
                             <!--number of threads to use-->
                            <threadgroup00.numberOfThreads>${test.threads}</threadgroup00.numberOfThreads>
                             <!--delay of the test in seconds-->
                            <threadgroup00.scheduledDelay>0</threadgroup00.scheduledDelay>
                             <!--duration of the test in seconds-->
                            <threadgroup00.scheduledDuration>${test.duration}</threadgroup00.scheduledDuration>
                             <!--how long till all threads are up and running in seconds-->
                            <threadgroup00.rampUp>10</threadgroup00.rampUp>
							<!--Number of iteratons the users will perform the transactions-->
                            <threadgroup00.numberOfLoops>-1</threadgroup00.numberOfLoops>
                             <!--target throughput of all threads of the group per minute-->
                             <!-- <threadgroup00.throughput>100000000</threadgroup00.throughput> -->
                             <!-- use uris from given file -->
                             <!-- <threadgroup00.dataFile>${webapp.uris}</threadgroup00.dataFile> -->
                            <protocol>${webapp.protocol}</protocol>
                            <server>${webapp.url}</server>
                             <!-- <port>${webapp.port}</port> -->
							<!-- <overrideRootLogLevel>debug</overrideRootLogLevel> -->
                        </propertiesGlobal>																					
				
						<remoteConfig>
							<startServersBeforeTests>true</startServersBeforeTests>
							<!-- <serverList>192.168.4.6</serverList>-->
							<stopServersAfterTests>true</stopServersAfterTests>
						</remoteConfig>
						
					</configuration>						

                 </plugin>

             </plugins>
         </build>
		
</project>